data_mixins:
    job_classification:
        class: JobClassificationMixin
        fields:
            classification:
                type: "@django.ForeignKey"
                relation: job_classification
                options:
                    "null": true
                    on_delete: "@django.PROTECT"
                    editable: false

    job_classifications:
        class: JobClassificationsMixin
        fields:
            classifications:
                type: "@django.ManyToManyField"
                relation: job_classification

data_base:
    job_classification:
        class: JobClassificationBase
        base: resource
        mixins: [job_classification]
        id_fields: [classification_id, name]
        meta:
            unique_together: [classification, name]
            scope: classification

data:
    job_classification:
        class: JobClassification
        base: resource
        id_fields: [code]
        key: code
        roles:
            edit: [job-admin]
            view: [public]
        fields:
            code:
                type: "@django.CharField"
                options:
                    "null": false
                    max_length: 20
        meta:
            ordering_fields: [code, name]
            ordering: [code]
            search_fields: [code, name]
            command_base: job classification

command_mixins:
    job_classification:
        class: JobClassificationMixin
        meta:
            job_classification:
                data: job_classification
                priority: 1

command_base:
    job_classification:
        mixins: [job_classification]
        server_enabled: true
        groups_allowed: [job-admin]

command:
    job:
        classification:
            resource: job_classification
            base: job_classification
            base_name: job_classification
            priority: 60
